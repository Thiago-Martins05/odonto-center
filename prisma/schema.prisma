// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Service {
  id          String  @id @default(cuid())
  name        String
  slug        String  @unique
  durationMin Int
  description String?
  priceCents  Int      @default(0)
  active      Boolean  @default(true)
  rules       AvailabilityRule[]
  appointmentServices AppointmentService[]
}

model AvailabilityRule {
  id        String  @id @default(cuid())
  weekday   Int     // 0..6 (Sunday..Saturday)
  start     String  // "09:00"
  end       String  // "12:00"
  serviceId String?
  service   Service? @relation(fields: [serviceId], references: [id])
}

model BlackoutDate {
  id     String   @id @default(cuid())
  date   DateTime
  reason String?
}

model Appointment {
  id        String   @id @default(cuid())
  patientName String
  email     String
  phone     String?
  startsAt  DateTime
  endsAt    DateTime
  notes     String?
  status    String    @default("scheduled") // scheduled|cancelled|done
  createdAt DateTime  @default(now())
  
  // Relacionamento com múltiplos serviços
  appointmentServices AppointmentService[]
  
  @@index([startsAt])
}

model AppointmentService {
  id            String      @id @default(cuid())
  appointmentId String
  appointment   Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
  serviceId     String
  service       Service     @relation(fields: [serviceId], references: [id])
  
  @@unique([appointmentId, serviceId])
}

model ClinicInfo {
  id           String   @id @default("singleton")
  name         String   @default("Odonto Center")
  slogan       String?
  address      String?
  cityState    String?
  phone        String?
  whatsapp     String?
  email        String?
  openingHours Json?
  mapEmbedUrl  String?
  highlights   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
